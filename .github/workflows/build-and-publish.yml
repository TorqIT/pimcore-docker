name: Create and publish Docker images

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}__${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            image: ghcr.io/TorqIT/pimcore-base
            target: base
          - dockerfile: ./Dockerfile
            image: ghcr.io/TorqIT/pimcore-php
            target: php
          - dockerfile: ./Dockerfile
            image: ghcr.io/TorqIT/pimcore-supervisord
            target: supervisord
          - dockerfile: ./Dockerfile.redis
            image: ghcr.io/TorqIT/pimcore-redis
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Determine image label
        id: label
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "label=latest" >> $GITHUB_OUTPUT
          else
            echo "label=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          tags: ${{ steps.label.outputs.label }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          file: ${{ matrix.dockerfile }}
          target: ${{ matrix.target }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
